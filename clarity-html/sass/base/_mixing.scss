// Padding 
@mixin padding($size) {
    padding: $size +'px' !important;
}

@mixin padding-left($size) {
    padding-left: $size +'px' !important;
}

@mixin padding-right($size) {
    padding-right: $size +'px' !important;
}

@mixin padding-top($size) {
    padding-top: $size +'px' !important;
}

@mixin padding-bottom($size) {
    padding-bottom: $size +'px' !important;
}

@mixin padding-horizontal($size) {
    padding-left: $size +'px' !important;
    padding-right: $size +'px' !important;
}

@mixin padding-vertical($size) {
    padding-top: $size +'px' !important;
    padding-bottom: $size +'px' !important;
}

$spaceamounts: (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60);
.u {
    &-padding {
        @each $space in $spaceamounts {
            &-all-#{$space} {
                @include padding(#{$space});
            }
            &-left-#{$space} {
                @include padding-left(#{$space});
            }
            &-right-#{$space} {
                @include padding-right(#{$space});
            }
            &-top-#{$space} {
                @include padding-top(#{$space});
            }
            &-bottom-#{$space} {
                @include padding-bottom(#{$space});
            }
        }
    }
}

//margin
@mixin margin($size) {
    margin: $size +'px' !important;
}

@mixin margin-left($size) {
    margin-left: $size +'px' !important;
}

@mixin margin-right($size) {
    margin-right: $size +'px' !important;
}

@mixin margin-top($size) {
    margin-top: $size +'px' !important;
}

@mixin margin-bottom($size) {
    margin-bottom: $size +'px' !important;
}

@mixin margin-horizontal($size) {
    margin-left: $size +'px' !important;
    margin-right: $size +'px' !important;
}

@mixin margin-vertical($size) {
    margin-top: $size +'px' !important;
    margin-bottom: $size +'px' !important;
}

$spaceamounts: (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60);
.u {
    &-margin {
        @each $space in $spaceamounts {
            &-all-#{$space} {
                @include margin(#{$space});
            }
            &-left-#{$space} {
                @include margin-left(#{$space});
            }
            &-right-#{$space} {
                @include margin-right(#{$space});
            }
            &-top-#{$space} {
                @include margin-top(#{$space});
            }
            &-bottom-#{$space} {
                @include margin-bottom(#{$space});
            }
        }
    }
}

$class: col_;
$offset: offset_;
$grid: 70px;
$gutter: 20px;

.row {
    margin: 0 -$gutter/2;
}

// custom grid
@for $i from 1 through 16 {

    // for each $col_#{i} 
    .#{$class}#{$i} {
        @if $i !=1 {
            width: $grid * $i;
        }
        @else {
            width: $grid;
        }
        padding: 0 $gutter/2;
        float: left;
        box-sizing: border-box;
    }
}

@for $i from 1 through 15 {

    // for each $col_#{i} 
    .#{$class}#{$offset}#{$i} {
        margin-left: $grid * $i;

    }
}
// BEM 
$bem-component: 'c';
$bem-object: 'o';
$bem-javascript: 'js';
$bem-utility: 'u';
$elementSeparator: '__'; 
$modifierSeparator: '--';
 
@mixin b($block) {
   .#{$block} {
       @content; 
   }
}
@mixin e($element) {
    @at-root {
        #{&}#{$elementSeparator+$element} {
            @content;
        }
    }
}
@mixin m($modifier) {
    @at-root {
        #{&}#{$modifierSeparator+$modifier} {
            @content;
        }
    }
}
// border-radius
@mixin border-radius($value){
    border-radius:$value;
    -moz-border-radius: $value;
    -webkit-border-radius: $value;
}
// Placeholder mixin
@mixin input-placeholder {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; } 
}
@mixin animation($animate...) {
    $max: length($animate);
    $animations: '';

    @for $i from 1 through $max {
        $animations: #{$animations + nth($animate, $i)};

        @if $i < $max {
            $animations: #{$animations + ", "};
        }
    }
    -webkit-animation: $animations;
    -moz-animation:    $animations;
    -o-animation:      $animations;
    animation:         $animations;
}

@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
      @content; 
    }
    @-moz-keyframes #{$name} {
      @content;
    }
    @-ms-keyframes #{$name} {
      @content;
    }
    @keyframes #{$name} {
      @content;
    } 
}
// generic transform
@mixin transform($transforms) {
    -moz-transform: $transforms;
      -o-transform: $transforms;
     -ms-transform: $transforms;
 -webkit-transform: $transforms;
       transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
@include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
  @include transform(scale($scale));
} 
// translate
@mixin translate ($x, $y) {
@include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
@include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
 moz-transform-origin: $origin;
      -o-transform-origin: $origin;
     -ms-transform-origin: $origin;
 -webkit-transform-origin: $origin;
       transform-origin: $origin;
}

// Breakpoint 

@mixin breakpoint($point) {
    @if $point == desktop {
      @media (min-width: 1366px) { @content ; }
   }
    @else if $point == laptop {
      @media (min-width: 1280px) { @content ; }
   }
     @else if $point == tablet {
      @media (min-width: 1024px) { @content ; }
   }
   @else if $point == mobileonly {
      @media (max-width: 768px)  { @content ; }
 
   }
 }
 